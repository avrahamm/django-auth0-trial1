# auth_decorators.py
# Generated by Claude, also it didn't help
# to open /projects route when Auth0 logged in.
import jwt
from functools import wraps
from django.conf import settings
from django.http import HttpResponseRedirect
from django.urls import reverse
from urllib.request import urlopen
import json

def requires_auth(f):
    @wraps(f)
    def decorated(request, *args, **kwargs):
        token = request.session.get('access_token')

        if not token:
            return HttpResponseRedirect(reverse('login'))

        try:
            jsonurl = urlopen(f'https://{settings.AUTH0_DOMAIN}/.well-known/jwks.json')
            jwks = json.loads(jsonurl.read())
            unverified_header = jwt.get_unverified_header(token)
            rsa_key = {}

            for key in jwks['keys']:
                if key['kid'] == unverified_header['kid']:
                    rsa_key = {
                        'kty': key['kty'],
                        'kid': key['kid'],
                        'use': key['use'],
                        'n': key['n'],
                        'e': key['e']
                    }

            if rsa_key:
                payload = jwt.decode(
                    token,
                    rsa_key,
                    algorithms=[settings.JWT_ALGORITHM],
                    audience=settings.AUTH0_AUDIENCE,
                    issuer=f'https://{settings.AUTH0_DOMAIN}/'
                )

                request.user.auth0_user = payload
                return f(request, *args, **kwargs)

        except jwt.ExpiredSignatureError:
            # Token has expired
            return HttpResponseRedirect(reverse('login'))
        except Exception as e:
            # Invalid token
            return HttpResponseRedirect(reverse('login'))

    return decorated